<?php
/**
 * Issue
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Issue Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Issue implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'reference_num' => 'string',
        'members_id' => 'string',
        'members_name' => 'string',
        'members_email' => 'string',
        'members_locations_id' => 'string',
        'members_locations_name' => 'string',
        'members_users_id' => 'string',
        'members_users_name' => 'string',
        'members_users_email' => 'string',
        'type' => 'string',
        'category' => 'string',
        'details' => 'string',
        'status' => 'string',
        'job' => 'string',
        'resolution' => 'string',
        'created' => '\DateTime',
        'updated' => '\DateTime',
        'enroute_time' => '\DateTime',
        'scheduled_time' => '\DateTime',
        'arrival_time' => '\DateTime',
        'departure_time' => '\DateTime'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'reference_num' => 'reference_num',
        'members_id' => 'members_id',
        'members_name' => 'members_name',
        'members_email' => 'members_email',
        'members_locations_id' => 'members_locations_id',
        'members_locations_name' => 'members_locations_name',
        'members_users_id' => 'members_users_id',
        'members_users_name' => 'members_users_name',
        'members_users_email' => 'members_users_email',
        'type' => 'type',
        'category' => 'category',
        'details' => 'details',
        'status' => 'status',
        'job' => 'job',
        'resolution' => 'resolution',
        'created' => 'created',
        'updated' => 'updated',
        'enroute_time' => 'enroute_time',
        'scheduled_time' => 'scheduled_time',
        'arrival_time' => 'arrival_time',
        'departure_time' => 'departure_time'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'reference_num' => 'setReferenceNum',
        'members_id' => 'setMembersId',
        'members_name' => 'setMembersName',
        'members_email' => 'setMembersEmail',
        'members_locations_id' => 'setMembersLocationsId',
        'members_locations_name' => 'setMembersLocationsName',
        'members_users_id' => 'setMembersUsersId',
        'members_users_name' => 'setMembersUsersName',
        'members_users_email' => 'setMembersUsersEmail',
        'type' => 'setType',
        'category' => 'setCategory',
        'details' => 'setDetails',
        'status' => 'setStatus',
        'job' => 'setJob',
        'resolution' => 'setResolution',
        'created' => 'setCreated',
        'updated' => 'setUpdated',
        'enroute_time' => 'setEnrouteTime',
        'scheduled_time' => 'setScheduledTime',
        'arrival_time' => 'setArrivalTime',
        'departure_time' => 'setDepartureTime'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'reference_num' => 'getReferenceNum',
        'members_id' => 'getMembersId',
        'members_name' => 'getMembersName',
        'members_email' => 'getMembersEmail',
        'members_locations_id' => 'getMembersLocationsId',
        'members_locations_name' => 'getMembersLocationsName',
        'members_users_id' => 'getMembersUsersId',
        'members_users_name' => 'getMembersUsersName',
        'members_users_email' => 'getMembersUsersEmail',
        'type' => 'getType',
        'category' => 'getCategory',
        'details' => 'getDetails',
        'status' => 'getStatus',
        'job' => 'getJob',
        'resolution' => 'getResolution',
        'created' => 'getCreated',
        'updated' => 'getUpdated',
        'enroute_time' => 'getEnrouteTime',
        'scheduled_time' => 'getScheduledTime',
        'arrival_time' => 'getArrivalTime',
        'departure_time' => 'getDepartureTime'
    );
  
    
    /**
      * $id Primary key.
      * @var string
      */
    protected $id;
    
    /**
      * $reference_num Reference number.
      * @var string
      */
    protected $reference_num;
    
    /**
      * $members_id The primary key of the related *Merchant*.
      * @var string
      */
    protected $members_id;
    
    /**
      * $members_name 
      * @var string
      */
    protected $members_name;
    
    /**
      * $members_email 
      * @var string
      */
    protected $members_email;
    
    /**
      * $members_locations_id The primary key of the related *MerchantLocation*.
      * @var string
      */
    protected $members_locations_id;
    
    /**
      * $members_locations_name 
      * @var string
      */
    protected $members_locations_name;
    
    /**
      * $members_users_id The primary key of the related *MerchantUser*.
      * @var string
      */
    protected $members_users_id;
    
    /**
      * $members_users_name 
      * @var string
      */
    protected $members_users_name;
    
    /**
      * $members_users_email 
      * @var string
      */
    protected $members_users_email;
    
    /**
      * $type Type.
      * @var string
      */
    protected $type;
    
    /**
      * $category Category.
      * @var string
      */
    protected $category;
    
    /**
      * $details Details.
      * @var string
      */
    protected $details;
    
    /**
      * $status Status.
      * @var string
      */
    protected $status;
    
    /**
      * $job Job type.
      * @var string
      */
    protected $job;
    
    /**
      * $resolution Resolution type.
      * @var string
      */
    protected $resolution;
    
    /**
      * $created Date created.
      * @var \DateTime
      */
    protected $created;
    
    /**
      * $updated Date last updated.
      * @var \DateTime
      */
    protected $updated;
    
    /**
      * $enroute_time Actual technician travel time.
      * @var \DateTime
      */
    protected $enroute_time;
    
    /**
      * $scheduled_time Date/time scheduled.
      * @var \DateTime
      */
    protected $scheduled_time;
    
    /**
      * $arrival_time Technician arrival time.
      * @var \DateTime
      */
    protected $arrival_time;
    
    /**
      * $departure_time Technician departure time.
      * @var \DateTime
      */
    protected $departure_time;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->reference_num = $data["reference_num"];
            $this->members_id = $data["members_id"];
            $this->members_name = $data["members_name"];
            $this->members_email = $data["members_email"];
            $this->members_locations_id = $data["members_locations_id"];
            $this->members_locations_name = $data["members_locations_name"];
            $this->members_users_id = $data["members_users_id"];
            $this->members_users_name = $data["members_users_name"];
            $this->members_users_email = $data["members_users_email"];
            $this->type = $data["type"];
            $this->category = $data["category"];
            $this->details = $data["details"];
            $this->status = $data["status"];
            $this->job = $data["job"];
            $this->resolution = $data["resolution"];
            $this->created = $data["created"];
            $this->updated = $data["updated"];
            $this->enroute_time = $data["enroute_time"];
            $this->scheduled_time = $data["scheduled_time"];
            $this->arrival_time = $data["arrival_time"];
            $this->departure_time = $data["departure_time"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id Primary key.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets reference_num
     * @return string
     */
    public function getReferenceNum()
    {
        return $this->reference_num;
    }
  
    /**
     * Sets reference_num
     * @param string $reference_num Reference number.
     * @return $this
     */
    public function setReferenceNum($reference_num)
    {
        
        $this->reference_num = $reference_num;
        return $this;
    }
    
    /**
     * Gets members_id
     * @return string
     */
    public function getMembersId()
    {
        return $this->members_id;
    }
  
    /**
     * Sets members_id
     * @param string $members_id The primary key of the related *Merchant*.
     * @return $this
     */
    public function setMembersId($members_id)
    {
        
        $this->members_id = $members_id;
        return $this;
    }
    
    /**
     * Gets members_name
     * @return string
     */
    public function getMembersName()
    {
        return $this->members_name;
    }
  
    /**
     * Sets members_name
     * @param string $members_name 
     * @return $this
     */
    public function setMembersName($members_name)
    {
        
        $this->members_name = $members_name;
        return $this;
    }
    
    /**
     * Gets members_email
     * @return string
     */
    public function getMembersEmail()
    {
        return $this->members_email;
    }
  
    /**
     * Sets members_email
     * @param string $members_email 
     * @return $this
     */
    public function setMembersEmail($members_email)
    {
        
        $this->members_email = $members_email;
        return $this;
    }
    
    /**
     * Gets members_locations_id
     * @return string
     */
    public function getMembersLocationsId()
    {
        return $this->members_locations_id;
    }
  
    /**
     * Sets members_locations_id
     * @param string $members_locations_id The primary key of the related *MerchantLocation*.
     * @return $this
     */
    public function setMembersLocationsId($members_locations_id)
    {
        
        $this->members_locations_id = $members_locations_id;
        return $this;
    }
    
    /**
     * Gets members_locations_name
     * @return string
     */
    public function getMembersLocationsName()
    {
        return $this->members_locations_name;
    }
  
    /**
     * Sets members_locations_name
     * @param string $members_locations_name 
     * @return $this
     */
    public function setMembersLocationsName($members_locations_name)
    {
        
        $this->members_locations_name = $members_locations_name;
        return $this;
    }
    
    /**
     * Gets members_users_id
     * @return string
     */
    public function getMembersUsersId()
    {
        return $this->members_users_id;
    }
  
    /**
     * Sets members_users_id
     * @param string $members_users_id The primary key of the related *MerchantUser*.
     * @return $this
     */
    public function setMembersUsersId($members_users_id)
    {
        
        $this->members_users_id = $members_users_id;
        return $this;
    }
    
    /**
     * Gets members_users_name
     * @return string
     */
    public function getMembersUsersName()
    {
        return $this->members_users_name;
    }
  
    /**
     * Sets members_users_name
     * @param string $members_users_name 
     * @return $this
     */
    public function setMembersUsersName($members_users_name)
    {
        
        $this->members_users_name = $members_users_name;
        return $this;
    }
    
    /**
     * Gets members_users_email
     * @return string
     */
    public function getMembersUsersEmail()
    {
        return $this->members_users_email;
    }
  
    /**
     * Sets members_users_email
     * @param string $members_users_email 
     * @return $this
     */
    public function setMembersUsersEmail($members_users_email)
    {
        
        $this->members_users_email = $members_users_email;
        return $this;
    }
    
    /**
     * Gets type
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }
  
    /**
     * Sets type
     * @param string $type Type.
     * @return $this
     */
    public function setType($type)
    {
        
        $this->type = $type;
        return $this;
    }
    
    /**
     * Gets category
     * @return string
     */
    public function getCategory()
    {
        return $this->category;
    }
  
    /**
     * Sets category
     * @param string $category Category.
     * @return $this
     */
    public function setCategory($category)
    {
        
        $this->category = $category;
        return $this;
    }
    
    /**
     * Gets details
     * @return string
     */
    public function getDetails()
    {
        return $this->details;
    }
  
    /**
     * Sets details
     * @param string $details Details.
     * @return $this
     */
    public function setDetails($details)
    {
        
        $this->details = $details;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status Status.
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets job
     * @return string
     */
    public function getJob()
    {
        return $this->job;
    }
  
    /**
     * Sets job
     * @param string $job Job type.
     * @return $this
     */
    public function setJob($job)
    {
        
        $this->job = $job;
        return $this;
    }
    
    /**
     * Gets resolution
     * @return string
     */
    public function getResolution()
    {
        return $this->resolution;
    }
  
    /**
     * Sets resolution
     * @param string $resolution Resolution type.
     * @return $this
     */
    public function setResolution($resolution)
    {
        
        $this->resolution = $resolution;
        return $this;
    }
    
    /**
     * Gets created
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->created;
    }
  
    /**
     * Sets created
     * @param \DateTime $created Date created.
     * @return $this
     */
    public function setCreated($created)
    {
        
        $this->created = $created;
        return $this;
    }
    
    /**
     * Gets updated
     * @return \DateTime
     */
    public function getUpdated()
    {
        return $this->updated;
    }
  
    /**
     * Sets updated
     * @param \DateTime $updated Date last updated.
     * @return $this
     */
    public function setUpdated($updated)
    {
        
        $this->updated = $updated;
        return $this;
    }
    
    /**
     * Gets enroute_time
     * @return \DateTime
     */
    public function getEnrouteTime()
    {
        return $this->enroute_time;
    }
  
    /**
     * Sets enroute_time
     * @param \DateTime $enroute_time Actual technician travel time.
     * @return $this
     */
    public function setEnrouteTime($enroute_time)
    {
        
        $this->enroute_time = $enroute_time;
        return $this;
    }
    
    /**
     * Gets scheduled_time
     * @return \DateTime
     */
    public function getScheduledTime()
    {
        return $this->scheduled_time;
    }
  
    /**
     * Sets scheduled_time
     * @param \DateTime $scheduled_time Date/time scheduled.
     * @return $this
     */
    public function setScheduledTime($scheduled_time)
    {
        
        $this->scheduled_time = $scheduled_time;
        return $this;
    }
    
    /**
     * Gets arrival_time
     * @return \DateTime
     */
    public function getArrivalTime()
    {
        return $this->arrival_time;
    }
  
    /**
     * Sets arrival_time
     * @param \DateTime $arrival_time Technician arrival time.
     * @return $this
     */
    public function setArrivalTime($arrival_time)
    {
        
        $this->arrival_time = $arrival_time;
        return $this;
    }
    
    /**
     * Gets departure_time
     * @return \DateTime
     */
    public function getDepartureTime()
    {
        return $this->departure_time;
    }
  
    /**
     * Sets departure_time
     * @param \DateTime $departure_time Technician departure time.
     * @return $this
     */
    public function setDepartureTime($departure_time)
    {
        
        $this->departure_time = $departure_time;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
